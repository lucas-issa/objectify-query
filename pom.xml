<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.googlecode.objectify-query</groupId>
	<artifactId>objectify-query</artifactId>
	<version>0.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>objectify-query</name>
	<description>
		objectify-query is a JSR 269 annotation processor that processes objectify-appengine's 
		annotations to generate "safer" query classes.  The generated query class provides 
		type-safe methods to filter each of the entities indexed properties
	</description>
	<url>http://http://code.google.com/p/objectify-query</url>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<scm>
		<connection>scm:hg:http://objectify-query.googlecode.com/hg/</connection>
		<developerConnection>scm:hg:https://objectify-query.googlecode.com/hg/</developerConnection>
		<url>http://code.google.com/p/objectify-query/source/browse/</url>
	</scm>

	<issueManagement>
		<system>Google Code</system>
		<url>http://code.google.com/p/objectify-query/issues</url>
	</issueManagement>

	<developers>
		<developer>
			<name>Brendan Doherty</name>
		</developer>
	</developers>

	<properties>
		<target.jdk>1.6</target.jdk>

		<maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
		<maven-eclipse-plugin.version>2.8</maven-eclipse-plugin.version>
		<maven-processor-plugin.version>2.0.4</maven-processor-plugin.version>
		<build-helper-maven-plugin.version>1.5</build-helper-maven-plugin.version>
		<objectify-appengine.version>3.0</objectify-appengine.version>
		<gae.version>1.5.0</gae.version>
		<gae.home>${user.home}/.m2/repository/com/google/appengine/appengine-java-sdk/${gae.version}/appengine-java-sdk-${gae.version}</gae.home>
		<gwt.version>2.2.0</gwt.version>
		<junit.version>4.8.2</junit.version>
		<hamcrest.version>1.1</hamcrest.version>
		<maven-surefire-plugin.version>2.8</maven-surefire-plugin.version>

	</properties>

	<repositories>
		<repository>
			<id>objectify-appengine</id>
			<url>http://objectify-appengine.googlecode.com/svn/maven</url>
		</repository>
	</repositories>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.scm</groupId>
				<artifactId>maven-scm-provider-hg</artifactId>
				<version>1.4</version>
			</extension>
		</extensions>

		<resources>
			<!-- bundle sources with the jar, so they are visible to GWT's compiler -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.java</include>
				</includes>
			</resource>
			<!-- bundle module descriptor with the jar, so it is visible to GWT's 
				compiler -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.gwt.xml</include>
					<include>META-INF/services/javax.annotation.processing.Processor</include>
				</includes>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>target/generated-sources/apt-test</directory>
			</testResource>
		</testResources>


		<plugins>
			<!-- Disable annotation processors during normal compilation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${target.jdk}</source>
					<target>${target.jdk}</target>
					<proc>none</proc>  <!-- use maven-processor-plugin instead -->
				</configuration>
			</plugin>

			<!-- maven-processor-plugin is more reliable than using maven-complier-plugin 
				for annotation processing -->
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>${maven-processor-plugin.version}</version>
				<executions>
					<!-- Run annotation processors on src/test/java sources -->
					<execution>
						<id>process-test</id>
						<goals>
							<goal>process-test</goal>
						</goals>
						<phase>generate-test-sources</phase>
					</execution>
				</executions>
			</plugin>

			<!-- add the files generated by annotation processing as a source -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-test-sources/apt</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>${maven-eclipse-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<includes>
						<include>**/Test*.java</include>
					</includes>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>

		<!-- Appengine dependencies -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Objectify dependencies -->
		<dependency>
			<groupId>com.googlecode.objectify</groupId>
			<artifactId>objectify</artifactId>
			<version>${objectify-appengine.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>org.hamcrest</groupId>
		    <artifactId>hamcrest-all</artifactId>
		    <version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>
